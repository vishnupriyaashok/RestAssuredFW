<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-30T11:33:06 CST" name="API Regression Test Suite" finished-at="2023-11-30T11:33:27 CST" duration-ms="21315">
    <groups>
    </groups>
    <test started-at="2023-11-30T11:33:06 CST" name="Go Rest API Test" finished-at="2023-11-30T11:33:13 CST" duration-ms="6668">
      <class name="com.qa.gorest.tests.GetUserTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:06 CST" name="setUp" finished-at="2023-11-30T11:33:07 CST" duration-ms="833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://gorest.co.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getUserSetup()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:07 CST" name="getUserSetup" finished-at="2023-11-30T11:33:07 CST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetup -->
        <test-method signature="getAllUsersTest()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:07 CST" name="getAllUsersTest" finished-at="2023-11-30T11:33:10 CST" duration-ms="3258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsersTest -->
        <test-method signature="getUserTest()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:10 CST" name="getUserTest" finished-at="2023-11-30T11:33:12 CST" duration-ms="1113" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.qa.gorest.tests.GetUserTest.getUserTest(GetUserTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserTest -->
        <test-method is-config="true" signature="getUserSetup()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:10 CST" name="getUserSetup" finished-at="2023-11-30T11:33:10 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetup -->
        <test-method signature="getUserWithQueryParamsTest()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:12 CST" name="getUserWithQueryParamsTest" finished-at="2023-11-30T11:33:13 CST" duration-ms="1113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserWithQueryParamsTest -->
        <test-method is-config="true" signature="getUserSetup()[pri:0, instance:com.qa.gorest.tests.GetUserTest@2a037324]" started-at="2023-11-30T11:33:12 CST" name="getUserSetup" finished-at="2023-11-30T11:33:12 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetup -->
      </class> <!-- com.qa.gorest.tests.GetUserTest -->
    </test> <!-- Go Rest API Test -->
    <test started-at="2023-11-30T11:33:13 CST" name="Go Rest API Create User Test" finished-at="2023-11-30T11:33:27 CST" duration-ms="13876">
      <class name="com.qa.gorest.tests.CreateUserTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:13 CST" name="setUp" finished-at="2023-11-30T11:33:13 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://gorest.co.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createUserTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:14 CST" name="createUserTest" data-provider="getUserTestDataFromSheet" finished-at="2023-11-30T11:33:17 CST" duration-ms="3773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tim]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[male]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method is-config="true" signature="createUserSetup()[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:14 CST" name="createUserSetup" finished-at="2023-11-30T11:33:14 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetup -->
        <test-method signature="createUserTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:17 CST" name="createUserTest" data-provider="getUserTestDataFromSheet" finished-at="2023-11-30T11:33:20 CST" duration-ms="2221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[male]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method is-config="true" signature="createUserSetup()[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:17 CST" name="createUserSetup" finished-at="2023-11-30T11:33:17 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetup -->
        <test-method is-config="true" signature="createUserSetup()[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:20 CST" name="createUserSetup" finished-at="2023-11-30T11:33:20 CST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetup -->
        <test-method signature="createUserTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:20 CST" name="createUserTest" data-provider="getUserTestDataFromSheet" finished-at="2023-11-30T11:33:24 CST" duration-ms="4726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Joe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[female]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[inactive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method is-config="true" signature="createUserSetup()[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:24 CST" name="createUserSetup" finished-at="2023-11-30T11:33:24 CST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetup -->
        <test-method signature="createUserTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUserTest@7004e3d]" started-at="2023-11-30T11:33:24 CST" name="createUserTest" data-provider="getUserTestDataFromSheet" finished-at="2023-11-30T11:33:27 CST" duration-ms="2175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ema]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[female]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[inactive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
      </class> <!-- com.qa.gorest.tests.CreateUserTest -->
    </test> <!-- Go Rest API Create User Test -->
    <test started-at="2023-11-30T11:33:27 CST" name="Circuit Rest API Test" finished-at="2023-11-30T11:33:27 CST" duration-ms="512">
      <class name="com.qa.gorest.tests.CircuitTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.CircuitTest@67ec8477]" started-at="2023-11-30T11:33:27 CST" name="setUp" finished-at="2023-11-30T11:33:27 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://ergast.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getCircuitTest()[pri:0, instance:com.qa.gorest.tests.CircuitTest@67ec8477]" started-at="2023-11-30T11:33:27 CST" name="getCircuitTest" finished-at="2023-11-30T11:33:27 CST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircuitTest -->
        <test-method is-config="true" signature="circuitTestSetUp()[pri:0, instance:com.qa.gorest.tests.CircuitTest@67ec8477]" started-at="2023-11-30T11:33:27 CST" name="circuitTestSetUp" finished-at="2023-11-30T11:33:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- circuitTestSetUp -->
      </class> <!-- com.qa.gorest.tests.CircuitTest -->
    </test> <!-- Circuit Rest API Test -->
    <test started-at="2023-11-30T11:33:27 CST" name="ReqRes Rest API Test" finished-at="2023-11-30T11:33:27 CST" duration-ms="205">
      <class name="com.qa.gorest.tests.ReqResAPITest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.ReqResAPITest@278f8425]" started-at="2023-11-30T11:33:27 CST" name="setUp" finished-at="2023-11-30T11:33:27 CST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://reqres.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getReqResUsersTest()[pri:0, instance:com.qa.gorest.tests.ReqResAPITest@278f8425]" started-at="2023-11-30T11:33:27 CST" name="getReqResUsersTest" finished-at="2023-11-30T11:33:27 CST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReqResUsersTest -->
        <test-method is-config="true" signature="eeqResAPISetUp()[pri:0, instance:com.qa.gorest.tests.ReqResAPITest@278f8425]" started-at="2023-11-30T11:33:27 CST" name="eeqResAPISetUp" finished-at="2023-11-30T11:33:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eeqResAPISetUp -->
      </class> <!-- com.qa.gorest.tests.ReqResAPITest -->
    </test> <!-- ReqRes Rest API Test -->
  </suite> <!-- API Regression Test Suite -->
</testng-results>
